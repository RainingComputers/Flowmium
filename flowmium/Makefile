.PHONY: down up test watch

VERSION = $(shell cat Cargo.toml | grep '^version = "' | grep -o '".*"' | tr -d \")

down:
	docker-compose -f test-services.yaml down

up: 
	docker-compose -f test-services.yaml up

test:
	mkdir -p target

	# Run sqlx migrations
	sqlx migrate run

ifneq (,${FLOWMIUM_EXECUTOR_IMAGE_FROM_SOURCE})
	# Build executable and package into a docker image
	cargo build
	docker build . -f test-dockerfile -t flowmium-debug

	# Push the docker image with static executble into the registry in test services
	docker tag flowmium-debug localhost:5180/flowmium-debug:latest
	docker push localhost:5180/flowmium-debug:latest

	# Run tests, kubeconfig.yaml is generated by k3s in test services
	KUBECONFIG=./kubeconfig.yaml cargo test
else
	FLOWMIUM_EXECUTOR_IMAGE='docker.io/shnoo28/flowmium:latest' KUBECONFIG=./kubeconfig.yaml cargo test
endif

watch:
	KUBECONFIG=./kubeconfig.yaml watch kubectl get pods

push:
	cargo zigbuild --release --target aarch64-unknown-linux-musl
	cargo zigbuild --release --target x86_64-unknown-linux-musl

	mkdir -p ./build/arm64
	mkdir -p ./build/amd64

	cp ./target/aarch64-unknown-linux-musl/release/flowmium ./build/arm64/
	cp ./target/x86_64-unknown-linux-musl/release/flowmium ./build/amd64/

	docker buildx build --push --platform 'linux/arm64,linux/amd64' . -t shnoo28/flowmium:$(VERSION)
	docker buildx build --push --platform 'linux/arm64,linux/amd64' . -t shnoo28/flowmium:latest
